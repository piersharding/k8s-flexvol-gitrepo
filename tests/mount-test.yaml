---
  apiVersion: storage.k8s.io/v1
  kind: StorageClass
  metadata:
    name: gitrepo
  provisioner: piersharding/gitrepo
  parameters:
    description: "Volume from GitRepo FlexVolume driver"

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-flex-gitrepo-0001
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteMany
  flexVolume:
    driver: "piersharding/gitrepo"
    options:
      repo: "https://github.com/piersharding/k8s-flexvol-gitrepo.git"
      hostTarget: /data/images
  storageClassName: gitrepo

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: gitrepo-data
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  volumeName: "pv-flex-gitrepo-0001"
  storageClassName: gitrepo

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: gitrepo-test
data:
  hello.conf: |
    server {
        listen 80;

        root /usr/share/nginx/html;
        try_files /README.md =404;

        expires -1;

        sub_filter_once off;
        sub_filter 'server_hostname' '$hostname';
        sub_filter 'server_address' '$server_addr:$server_port';
        sub_filter 'server_url' '$request_uri';
        sub_filter 'server_date' '$time_local';
        sub_filter 'request_id' '$request_id';
    }

---
apiVersion: v1
kind: Service
metadata:
  name: nginx1
  labels:
    app: nginx1
spec:
  selector:
    app: nginx1
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment1
  labels:
    app: nginx1
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx1
  template:
    metadata:
      labels:
        app: nginx1
    spec:
      containers:
      - name: nginx
        image: nginx
        imagePullPolicy: IfNotPresent
        ports:
          - containerPort: 80
            protocol: TCP
        volumeMounts:
          - mountPath: /usr/share/nginx/html
            name: www-data
            readOnly: true
          - name: gitrepo-test-config
            mountPath: /etc/nginx/conf.d
      volumes:
      - name: www-data
        persistentVolumeClaim:
          claimName: gitrepo-data
      - name: gitrepo-test-config
        configMap:
          name: gitrepo-test


---
apiVersion: v1
kind: Service
metadata:
  name: nginx2
  labels:
    app: nginx2
spec:
  selector:
    app: nginx2
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment2
  labels:
    app: nginx2
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx2
  template:
    metadata:
      labels:
        app: nginx2
    spec:
      containers:
      - name: nginx
        image: nginx
        imagePullPolicy: IfNotPresent
        ports:
          - containerPort: 80
            protocol: TCP
        volumeMounts:
          - mountPath: /usr/share/nginx/html
            name: www-data
            readOnly: true
          - name: gitrepo-test-config
            mountPath: /etc/nginx/conf.d
      volumes:
      - name: www-data
        persistentVolumeClaim:
          claimName: gitrepo-data
      - name: gitrepo-test-config
        configMap:
          name: gitrepo-test

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: gitrepo-test
  labels:
    app.kubernetes.io/name: gitrepo-test
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/x-forwarded-prefix: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
  - host: nginx1
    http:
      paths:
      - path: /
        backend:
          serviceName:  nginx1
          servicePort: 80
  - host: nginx2
    http:
      paths:
      - path: /
        backend:
          serviceName:  nginx2
          servicePort: 80
